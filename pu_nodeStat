#!/bin/bash
# Copyright (C) 2022-2023 Timothy J. Williams
# License MIT [https://opensource.org/licenses/MIT]

usage="Usage: $0 [-h]"
helpText="Prints human-readable counts of status for all the nodes."

if [ "$#" -ne 0 ] ; then
    if [ "$#" -ge 2 ] ; then
        echo $usage >&2
        exit 1
    else
        helpArg=$1
        if [[ "$helpArg" != "-h" ]]; then
            echo "Unknown argument: $helpArg ; usage: $usage" >&2
            exit 1
        else
            echo $helpText >&2
            exit 0
        fi
    fi
fi

# nodeStatuses=("free" "job-exclusive" "resv-exclusive" "down" "offline" "down,offline" "state-unknown")
nodeStatuses=( $(pbsnodes -a -F json | jq -r '.nodes[] | [.state] | @tsv' | sort | uniq) )

pbsnodesOutput=`pbsnodes -a -F json`

echo ""
echo "PARTITION: workq"
echo "---------------------"
echo "Nodes  Status"
echo "-----  ------"
for status in "${nodeStatuses[@]}"; do
    printf "%5s  %-18s \n" `printf '%s\n' "$pbsnodesOutput" | jq -r '.nodes[] | select( (.state=="'${status}'") and .resources_available.debug!="True" and .resources_available.validation!="True" and .resources_available.broken!="True") | [.resources_available.host,.state] | @tsv' | wc -l` $status
done
printf "%5s  %-18s \n" `printf '%s\n' "$pbsnodesOutput" | jq -r '.nodes[] | select( .resources_available.debug!="True" and .resources_available.validation!="True" and .resources_available.broken=="True") | [.resources_available.host,.state] | @tsv' | wc -l` "broken"

echo ""
echo "PARTITION: debug"
echo "---------------------"
echo "Nodes  Status"
echo "-----  ------"
for status in "${nodeStatuses[@]}"; do
    printf "%5s  %-18s \n" `printf '%s\n' "$pbsnodesOutput" | jq -r '.nodes[] | select( (.state=="'${status}'") and .resources_available.debug=="True" and .resources_available.validation!="True" and .resources_available.broken!="True") | [.resources_available.host,.state] | @tsv' | wc -l` $status
done
printf "%5s  %-18s \n" `printf '%s\n' "$pbsnodesOutput" | jq -r '.nodes[] | select( .resources_available.debug=="True" and .resources_available.validation!="True" and .resources_available.broken=="True") | [.resources_available.host,.state] | @tsv' | wc -l` "broken"

echo ""
echo "PARTITION: validation"
echo "---------------------"
echo "Nodes  Status"
echo "-----  ------"
for status in "${nodeStatuses[@]}"; do
    printf "%5s  %-18s \n" `printf '%s\n' "$pbsnodesOutput" | jq -r '.nodes[] | select( (.state=="'${status}'") and .resources_available.debug!="True" and .resources_available.validation=="True" and .resources_available.broken!="True") | [.resources_available.host,.state] | @tsv' | wc -l` $status
done
printf "%5s  %-18s \n" `printf '%s\n' "$pbsnodesOutput" | jq -r '.nodes[] | select( .resources_available.debug!="True" and .resources_available.validation=="True" and .resources_available.broken=="True") | [.resources_available.host,.state] | @tsv' | wc -l` "broken"

echo ""
